//////////////////////////////
// Import Compass CSS3 Animation
//////////////////////////////
@import "compass/css3/animation";

//////////////////////////////
// Carousel Default Variables
//////////////////////////////
$css-carousel-slider: '> ul';
$css-carousel-slide: '> li';
$css-carousel-animation: 'carousel';
$css-carousel-duration: 30s;
$css-carousel-extend: true;

$css-carousel-action: 'reverse';
$css-carousel-speed: 5;

//////////////////////////////
// Carousel Component
//////////////////////////////
// Carousel Basics
@mixin css-carousel-basics($extend: $css-carousel-extend) {
  @if $extend {
    @extend %css-carousel-basics;
  }
  @else {
    overflow: hidden;
    width: 100%;

    img {
      display: block;
      width: 100%;
      max-width: 100%;
      height: auto;
    }
  }
}

// Carousel List
@mixin css-carousel-slider($extend: $css-carousel-extend) {
  @if $extend {
    @extend %css-carousel-slider;
  }
  @else {
    list-style: none;
    margin: 0;
    padding: 0;
    position: relative;
    overflow: hidden;
  }
}

// Carousel Slide
@mixin css-carousel-slide($extend: $css-carousel-extend) {
  @if $extend {
    @extend %css-carousel-slide;
  }
  @else {
    position: relative;
    float: left;
  }
}

// List sizing, for changing only the size of the carousel
@mixin css-carousel-size($items, $slider: $css-carousel-slider, $slide: $css-carousel-slide) {
  #{$slider} {
    width: 100% * $items;

    #{$slide} {
      width: 100% / $items;
    }
  }
}

// Animation wrapped in slider
@mixin css-carousel-slider-animation($animation: $css-carousel-animation, $duration: $css-carousel-duration, $slider: $css-carousel-slider) {
  #{$slider} {
    @include animation(unquote($animation) $duration infinite);
  }
}

// Carousel Component
@mixin css-carousel-component($items, $slider: $css-carousel-slider, $slide: $css-carousel-slide, $animation: $css-carousel-animation, $duration: $css-carousel-duration, $extend: $css-carousel-extend) {

  @include css-carousel-basics($extend);

  @include css-carousel-size($items, $slider, $slide);

  #{$slider} {
    @include css-carousel-slider($extend);

    #{$slide} {
      @include css-carousel-slide($extend);
    }
  }

  @include css-carousel-slider-animation($animation, $duration, $slider);
}

// Carousel Extends
%css-carousel-basics {
  @include css-carousel-basics(false);
}

%css-carousel-slider {
  @include css-carousel-slider(false);
}

%css-carousel-slide {
  @include css-carousel-slide(false);
}

//////////////////////////////
// Carousel Animation
//////////////////////////////
@mixin css-carousel-animation($items, $action: $css-carousel-action, $speed: $css-carousel-speed, $name: $css-carousel-animation) {
  $increment: 0;

  @if $action == 'reverse' {
    $increment: 100 / (2 * ($items - 1)) * 1%;
  }
  @else if $action == 'start' {
    $increment: 100 / (($items)) * 1%;
  }

  $speed: $increment - ($speed * 1%);

  $counter: 0%;
  $offset: 0;

  @include keyframes($name) {
    @for $i from 0 through $items - 1 {
      $counter: $increment * $i;
      $offset: -100% * $i;

      #{$counter} {left: $offset}
      #{$counter + $speed} {left: $offset};
    }
    @if $action == 'reverse' {
      @for $i from -1 * ($items - 2) through 0 {
	$counter: $counter + $increment;
	$offset: -100% * abs($i);

	#{$counter} {left: $offset}

	@if $i != 0 {
	  #{$counter + $speed} {left: $offset};
	}
      }
    }
    @else if $action == 'start' {
      100% {left: 0};
    }
  }
}