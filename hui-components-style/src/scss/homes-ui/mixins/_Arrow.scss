@mixin TooltipArrow-arrow($hyp: $tooltipArrow-height, $offset: 0) {
    $length: round(cos(45) * $hyp);

    @include pseudo-icon($position: 'after') {
        position: absolute;
        width: $length;
        height: $length;
        @include rotate(45deg);
        margin: -$length/2;

        @content;
    }
}

@mixin TooltipArrow-position($position: 'left', $length: $tooltipArrow-height) {
    position: absolute;
    @if ($position == 'left') or ($position == 'right') {
        width: $length/2;
        height: $length;
        top: 50%;
        #{if($position == 'left', 'right', 'left')}: 100%;
        margin-top: $length/-2;
        &::after {
            top: 50%;
            #{$position}: 100%;
        }
    } @else {
        width: $length;
        height: $length/2;
        left: 50%;
        #{if($position == 'top', 'bottom', 'top')}: 100%;
        margin-left: $length/-2;
        &::after {
            left: 50%;
            #{$position}: 100%;
        }
    }
    overflow: hidden;
}

@mixin dropdown-arrow($length: 24px, $height: 5px, $side: right, $side-length: $grid-space) {
    @if not ($length % 2 == 0) and (relative-unit($length)) {
        @warn "Fractional PX value for margin-left. Use relative units or an even $length.";
    }
    // Structure
    &:before,
    &:after {
        content: '';
        position: absolute;
        #{$side}: #{$side-length};
        margin-#{$side}: $length / -2;
        width: $length;
        height: $length;
        @include transform(rotate(45deg) skew(12deg, 12deg));
        margin-top: $height;
        top: 0;
        z-index: -1;
    }
    &:after {
        z-index: 0;
        margin-#{$side}: $length / -2 + 1;
    }
    // Style
    &:before {
        @extend %site-nav-drop-style;
    }
    &:after {
        background: $white;
    }
    @include degrade-from(csstransforms) {
        // Yeah, this.
    }

    @content;
}