$form-checkbox-mobile              : false !global !default;
// Form Checkbox (mixin)
//
// ## Params
//
// > * `$extend` - true {boolean} Extends the default styles instead of inserting the mixin output. Set to false if you are customizing the component.
//
// ```scss
// @include new-form-checkbox;
// ```
//
// Styleguide 6.0.4.1


@mixin form-checkbox( $extend: true) {
    @if $extend {
        @extend %form-checkbox;
    } @else {
        position: absolute;
        opacity: 0;
        height: 0;
        width: 0;
        display: inline;
        @include appearance(none);
        line-height: 0;
        border: 0;
        padding: 0;
        & + label {
            position: relative;
            padding-left: $form-checkbox-width + $grid-space;
            font-size: $font-size-normal;
            color: $mediumDarkGrey;

            @include pseudo-icon($position:both, $blank:true) {
                position: absolute;
                left: 0;
                top: 50%;
                display:block;
                @include box-sizing(border-box);
            };
            &::before {
                @include dim-square($form-checkbox-height);
                background: $white;
                border: $form-field-border;

                // checkbox
                @include border-radius($form-field-border-radius);
                @include transform(translateY(-50%));
            }
            &::after {
                @include transform(translate(-50%, -50%));
                left: $form-checkbox-width / 2;
            }
        }
        &:checked + label {
            &::before {
                background: $form-input-complete-color;
                @include form-input-shadow();

            }
            &:after {
                @include icon-hui('checkmark');
                font-size: 125%;
                color: $white;
                background: $form-input-complete-color;
            }
        }
        &:disabled + label {
            @include disabled($extend:false);
        }
        &:active + label,
        & + label.is-active {
            &:before {
                background-color: rgba($white,.5);
            }
        }

        &:focus + label {
            &:before {
                border: $form-input-border-width solid $form-field-hover-border-color;
            }
        }
    }
}


// Form Radio (mixin)
//
// ## Params
//
// > * `$extend` - true {boolean} Extends the default styles instead of inserting the mixin output. Set to false if you are customizing the component.
//
// ```scss
// @include new-form-checkbox;
// ```
//
// Styleguide 6.0.4.1

@mixin form-radio($extend: true) {
    @if $extend {
        @extend %form-radio;
    } @else {
        @include form-checkbox;
        & + label {
            &:before,
            &:after {
                @include border-radius(100%);
            }
        }
        &:checked + label {
            &::before{
                background-color: inherit;
                @include box-shadow(none);
            }

            &::after {
                content: '';
                background-color: $form-input-complete-color;
                @include form-input-shadow();
                @include dim-square($form-checkbox-height - $form-input-border-width * 4);
            }
        }
    }
}


@mixin form-switch($extend: true) {
    @if $extend {
        @extend %form-switch;
    } @else {
        & + label {
            border: $form-input-border;
            @include border-radius($radius-rounded);
            background: $form-input-border-color;
            color: $white;
            display: inline-block;
            line-height: $form-checkbox-height;
            @include form-input-shadow();
            padding: 0;
            &:hover {
                background: $orange;
            }
            &::before,
            &::after {
                display: block;
                position: static;
                float: left;
                @include transform(0);
                font-size: $font-size-normal;
                font-weight: 600;
                transform: none;
            }
            &::before {

                @include border-radius(100%);
            };
            &::after {
                content: 'off';
                text-transform: uppercase;
                padding: 0 grid-space() 0 grid-space(.5);
            }
        }
        &:checked {
            &+label {
                background: $form-input-complete-color;
                &::before {
                    float: right;
                    background-color: $white;
                }
                &::after {
                    content: 'on';
                    padding: 0 grid-space(.5) 0 grid-space();
                    background: none;
                }
                &:hover {
                    background: $orange;
                }
            }
        }
        &:hover,
        &:active,
        &:focus {
            &+label {
                background: $orange;
                &::before {
                    border-color: $form-input-border-color;
                }
            }
        }
        &:disabled {
            &+label{
                background: $form-input-border-color;
            }
        }
    }
}


// @huidoc mixin
// @name Hide Checkbox
// @module forms
//
// @description
// Hide a checkbox or radio button for styling
//
// @param {boolean=true} $extend Extends the default styles instead of inserting the mixin output. Set to false if you are customizing the component.
//
// @example
// ```scss
// input[type="radio"] {
//        @include hide-checkbox();
// }
// ```
//
// @styleguide 6.0.4.2

@mixin hide-checkbox ($extend: false) {
    @if $extend {
        @extend %hide-checkbox;
    } @else {
        position: absolute;
        opacity: 0;
        height: 0;
        width: 0;
        display: inline;
        @include appearance(none);
        line-height: 0;
        border: 0;
        padding: 0;
    }
}

// @huidoc mixin
// @name Form Select
// @module forms
//
// @description
// Select from a series of options
//
// @param {boolean=true} $extend Extends the default styles instead of inserting the mixin output. Set to false if you are customizing the component.
// @param {boolean=true} $mobile Adjusts style based on mobile use
//
// @example
// ```scss
// .form-select {
//        @include form-select();
// }
// ```
//
// @styleguide 6.0.4.2

@mixin form-select($height: $form-select-height, $mobile: $form-checkbox-mobile, $extend: true) {
    @if $extend {
        @extend %form-select;
    } @else {
        @include display-flex();
        height: $height;
        padding: 0 $form-input-border-width; // to offset overlap
        @include align-items(stretch);
        margin-top: rhythm-px(.5);

        & > .form-select--item {
            @include display-flex();
            @include flex(1 1 grid-space(5));
            @include align-items(stretch);

            text-align: center;
            font-size: $font-size-small;

            @include breakpoint(rem-calc($site-min-width)) {
                font-size: $font-size-medium;

            }
        }
        .input-select {
            @include hide-checkbox();
            + label {
                @include display-flex();
                @include flex(1);
                @include flex-direction(column);
                @include justify-content(space-around);
                @include align-items(stretch);
                position: relative;
                padding: 0;
                margin: 0 (-1 * $form-input-border-width);
                border: $form-input-border;
                background-color: $white;
                text-align: center;
                color: $blue;

                z-index: 0;
                @if $mobile {
                    &:active {
                        border-color: $orange;
                        color: $orange;
                        z-index: 1;
                    }
                } @else {
                    &:active, &:hover {
                        border-color: $form-field-hover-border-color;
                        color: $form-input-hover-color;
                        z-index: 1;
                    }
                }
            }

            &:checked + label {
                color: $white;
                background-color: $form-input-complete-color;
                @include form-input-shadow();
            }

            &:disabled + label {
                @include disabled();
            }
        }
    }
}



@if import-once("Forms-checkbox-radio.scss") {

    %form-checkbox {
        @include form-checkbox($extend:false);
    }
    %form-radio {
        @include form-radio($extend:false);
    }
    %form-switch {
        @include form-switch($extend:false);
    }
    %form-select {
        @include form-select($extend: false);
    }
    %hide-checkbox {
        @include hide-checkbox($extend:false);
    }

}
