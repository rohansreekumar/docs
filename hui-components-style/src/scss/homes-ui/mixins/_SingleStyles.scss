// Single Styles
//
// Simple styles like color, text decoration, ect.
//
// Styleguide 11

// Auto H (mixin)
//
// Center aligns a block
//
// ## Params
//
// > * `$extend` - true {boolean} Extends the default styles instead of inserting the mixin output. Set to false if you are customizing the component.
//
// ```scss
// @include autoH;
// ```
//
// Styleguide 11.1

@mixin autoH($extend: true) {
    @if $extend {
        @extend %autoH;
    } @else {
        margin: {
            left: auto;
            right: auto;
        }
    }
}

// None (mixin)
//
// Sets `display:none`
//
// ## Params
//
// > * `$extend` - true {boolean} Extends the default styles instead of inserting the mixin output. Set to false if you are customizing the component.
//
// ```scss
// @include none;
// ```
//
// Styleguide 11.2

@mixin none($extend: true) {
    @if $extend {
        @extend %none;
    } @else {
        display: none;
    }
}

// Hidden (mixin)
//
// Sets `visibility:hidden`
//
// ## Params
//
// > * `$extend` - true {boolean} Extends the default styles instead of inserting the mixin output. Set to false if you are customizing the component.
//
// ```scss
// @include hidden;
// ```
//
// Styleguide 11.3

@mixin hidden($extend: true) {
    @if $extend {
        @extend %hidden;
    } @else {
        visibility: hidden;
    }
}

// Strong T
//
// Bolds
//
// ## Params
//
// > * `$extend` - true {boolean} Extends the default styles instead of inserting the mixin output. Set to false if you are customizing the component.
//
// ```scss
// @include strongT;
// ```
//
// Not in Styleguide

@mixin strongT($extend: true) {
    @if $extend {
        @extend %strongT;
    } @else {
        @include font-weight(700);
    }
}

// Normal T
//
// Applies default font styles
//
// ## Params
//
// > * `$extend` - true {boolean} Extends the default styles instead of inserting the mixin output. Set to false if you are customizing the component.
//
// ```scss
// @include normalT;
// ```
//
// Not in Styleguide

@mixin normalT($extend: true) {
    @if $extend {
        @extend %normalT;
    } @else {
        font: normal 400 #{$font-size-normal} / #{$base-line-height} $font-family;
        color: $body-color;
    }
}

// Color T (mixin) (global)
//
// Color Text
//
// ## Params
//
// > * `$color` - {string} Standard color to apply
// > * `$extend` - true {boolean} Extends the default styles instead of inserting the mixin output. Set to false if you are customizing the component.
//
// ```scss
// @include normalT;
// ```
//
// Styleguide 5.0.4.1

@mixin colorT($color, $extend: true) {
    $colors-val: $white $blue $orange $red $green $mediumGrey $darkGrey $black;
    $colors-label: 'white', 'blue', 'orange', 'red', 'green', 'grey', 'black';
    @if $extend {
        @extend %#{$color}T;
    } @else {
        color: nth($colors-val, index($colors-label, $color));
    }
}

// Round (mixin) (global)
//
// Standard Rounded Border
//
// ## Params
//
// > * `$extend` - true {boolean} Extends the default styles instead of inserting the mixin output. Set to false if you are customizing the component.
//
// ```scss
// @include rd;
// ```
//
// Styleguide 11.4

@mixin rd($extend: true) {
    @if $extend {
        @extend %rd;
    } @else {
        @include border-radius($global-radius);
    }
}

// Border (mixin) (global)
//
// Standard Border
//
// ## Params
//
// > * `$extend` - true {boolean} Extends the default styles instead of inserting the mixin output. Set to false if you are customizing the component.
//
// ```scss
// @include bd;
// ```
//
// Styleguide 11.5

@mixin bd($extend: true) {
    @if $extend {
        @extend %bd;
    } @else {
        border: solid 1px $border-color;
    }
}

// @huidoc mixin
// @name Disabled
// @module Base
// @description
// Disabled elements are 20% transparent.
//
// @param {boolean=true} $extend - Extends the default styles instead of inserting the mixin output. Set to false if you are customizing the component.
//
// ```scss
// @include disabled;
// ```
//
// @styleguide 0.0.0

@mixin disabled($extend: true) {
    @if $extend {
        @extend %disabled;
    } @else {
        opacity: $disabled-opacity;
    }
}

// @huidoc mixin
// @name Offsite
// @module Base
// @description
// Offsite links and buttons have a specific icon.
//
// @param {boolean=true} $extend - Extends the default styles instead of inserting the mixin output. Set to false if you are customizing the component.
//
// ```scss
// @include offsite;
// ```
//
// @styleguide 0.0.0

@mixin offsite($extend: true) {
    @if $extend {
        @extend %offsite;
    } @else {
        &::after {

            @include icon-hui('externallink');
            @include icon-inline;
        }
    }
}

@if import-once("SingleStyles.scss") {
    %autoH {
        @include autoH($extend: false);
    }
    %none {
        @include none($extend: false);
    }

    // Stylize
    %bd {
        @include bd($extend: false);
    }
    %rd {
        @include rd($extend: false);
    }
    %hidden {
        @include hidden($extend: false);
    }
    %disabled {
        @include disabled($extend: false);
    }

    %offsite {
        @include offsite($extend: false);
    }
    // Text Size
    %bodyT {
        font-size: $font-size-normal;
    }

    %normalT {
        @include normalT($extend: false);
    }

    // Text Stylize
    %noT {
        @include squish-text;
    }
    %strongT {
        @include strongT($extend: false);
    }

    %mediumT {
        @include font-weight(400);
    }
    %upperT {
        text-transform: uppercase;
    }
    %underT {
        text-decoration: underline;
    }
    %nowrap {
        white-space: nowrap;
    }
    %italicT {
        @include font-style(italic);
    }

    %blueT {
        @include colorT('blue', false);
    }
    %orangeT {
        @include colorT('orange', false);
    }
    %redT {
        @include colorT('red', false);
    }
    %greenT {
        @include colorT('green', false);
    }
    %whiteT {
        @include colorT('white', false);
    }
    %greyT {
        @include colorT('grey', false);
    }
    %blackT {
        @include colorT('black', false);
    }
}
